{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Mutica",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#characters"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#identifiers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.mutica",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.mutica",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.mutica"
                        }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.mutica",
                    "match": "\\b(let|perform|do|with|as|match|rec|panic|discard)\\b"
                },
                {
                    "name": "keyword.type.mutica",
                    "match": "\\b(int|char|true|false|any|none)\\b"
                },
                {
                    "name": "keyword.other.mutica",
                    "match": "\\b(input|print)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.mutica",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.mutica",
                    "match": "\\\\(n|r|t|\\\"|\\\\)"
                }
            ]
        },
        "characters": {
            "name": "string.quoted.single.mutica",
            "match": "'(\\\\(n|r|t|'|\\\"|\\\\)|[^'\\\\])'",
            "captures": {
                "1": {
                    "name": "constant.character.escape.mutica"
                }
            }
        },
        "numbers": {
            "name": "constant.numeric.mutica",
            "match": "\\b[0-9]+\\b"
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.dunder.mutica",
                    "match": "\\b(__add|__sub|__mul|__div|__mod|__is|__opcode|__continuation)\\b"
                },
                {
                    "name": "keyword.operator.arrow.mutica",
                    "match": "(->|\\|->|=>)"
                },
                {
                    "name": "keyword.operator.comparison.mutica",
                    "match": "(==|!=|<=|>=|<:|<|>)"
                },
                {
                    "name": "keyword.operator.arithmetic.mutica",
                    "match": "(\\+|-|\\*|/|%)"
                },
                {
                    "name": "keyword.operator.logical.mutica",
                    "match": "(!|&|\\|)"
                },
                {
                    "name": "keyword.operator.other.mutica",
                    "match": "(::|\\.\\.|\\.|@|~|,|=|;|#|\\\\|\\|>)"
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "entity.name.function.mutica",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*(?:->|\\|->))"
                },
                {
                    "name": "entity.name.type.mutica",
                    "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
                },
                {
                    "name": "variable.other.mutica",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        }
    },
    "scopeName": "source.mutica"
}
